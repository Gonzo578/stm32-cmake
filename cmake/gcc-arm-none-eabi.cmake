SET(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)

SET(CMAKE_C_FLAGS_INIT "${MCPU_FLAGS} ${VFP_FLAGS} ${SPEC_FLAGS} -Wall -fdata-sections -ffunction-sections -fno-builtin" CACHE INTERNAL "c compiler flags")
SET(CMAKE_CXX_FLAGS_INIT "${MCPU_FLAGS} ${VFP_FLAGS} ${SPEC_FLAGS} -Wall -fdata-sections -ffunction-sections -fno-builtin -fno-rtti -fno-exceptions" CACHE INTERNAL "cxx compiler flags")
SET(CMAKE_ASM_FLAGS_INIT "${MCPU_FLAGS} ${VFP_FLAGS} ${SPEC_FLAGS} -x assembler-with-cpp" CACHE INTERNAL "asm compiler flags")
SET(CMAKE_EXE_LINKER_FLAGS_INIT "${MCPU_FLAGS} ${VFP_FLAGS} ${SPEC_FLAGS} -Wl,--gc-sections" CACHE INTERNAL "executable linker flags")
SET(CMAKE_MODULE_LINKER_FLAGS_INIT "${MCPU_FLAGS} ${VFP_FLAGS} ${SPEC_FLAGS}" CACHE INTERNAL "module linker flags")
SET(CMAKE_SHARED_LINKER_FLAGS_INIT "${MCPU_FLAGS} ${VFP_FLAGS} ${SPEC_FLAGS}" CACHE INTERNAL "shared linker flags")

SET(CMAKE_C_FLAGS_DEBUG_INIT "-Og -g" CACHE INTERNAL "c compiler flags debug")
SET(CMAKE_CXX_FLAGS_DEBUG_INIT "-Og -g" CACHE INTERNAL "cxx compiler flags debug")
SET(CMAKE_ASM_FLAGS_DEBUG_INIT "-g" CACHE INTERNAL "asm compiler flags debug")
SET(CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT "" CACHE INTERNAL "linker flags debug")

SET(CMAKE_C_FLAGS_RELEASE_INIT "-O3" CACHE INTERNAL "c compiler flags release")
SET(CMAKE_CXX_FLAGS_RELEASE_INIT "-O3" CACHE INTERNAL "cxx compiler flags release")
SET(CMAKE_ASM_FLAGS_RELEASE_INIT "" CACHE INTERNAL "asm compiler flags release")
SET(CMAKE_EXE_LINKER_FLAGS_RELEASE_INIT "" CACHE INTERNAL "linker flags release")

SET(CMAKE_FIND_ROOT_PATH "${TOOLCHAIN_DIR}/${TOOLCHAIN_PREFIX}")
SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
